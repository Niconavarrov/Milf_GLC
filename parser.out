Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> S
Rule 1     S -> sbracket A sbracketF
Rule 2     A -> curlyb B curlybF comma A
Rule 3     A -> curlyb B curlybF
Rule 4     B -> key_id colon number_value comma C
Rule 5     C -> key_name colon string_value comma D
Rule 6     D -> key_course colon string_value comma E
Rule 7     E -> key_grades colon sbracket G sbracketF comma F
Rule 8     G -> number_value
Rule 9     G -> number_value comma G
Rule 10    F -> key_average colon number_value

Terminals, with rules where they appear

colon                : 4 5 6 7 10
comma                : 2 4 5 6 7 9
curlyb               : 2 3
curlybF              : 2 3
error                : 
key_average          : 10
key_course           : 6
key_grades           : 7
key_id               : 4
key_name             : 5
number_value         : 4 8 9 10
sbracket             : 1 7
sbracketF            : 1 7
string_value         : 5 6

Nonterminals, with rules where they appear

A                    : 1 2
B                    : 2 3
C                    : 4
D                    : 5
E                    : 6
F                    : 7
G                    : 7 9
S                    : 0

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . sbracket A sbracketF

    sbracket        shift and go to state 2

    S                              shift and go to state 1

state 1

    (0) S' -> S .



state 2

    (1) S -> sbracket . A sbracketF
    (2) A -> . curlyb B curlybF comma A
    (3) A -> . curlyb B curlybF

    curlyb          shift and go to state 4

    A                              shift and go to state 3

state 3

    (1) S -> sbracket A . sbracketF

    sbracketF       shift and go to state 5


state 4

    (2) A -> curlyb . B curlybF comma A
    (3) A -> curlyb . B curlybF
    (4) B -> . key_id colon number_value comma C

    key_id          shift and go to state 7

    B                              shift and go to state 6

state 5

    (1) S -> sbracket A sbracketF .

    $end            reduce using rule 1 (S -> sbracket A sbracketF .)


state 6

    (2) A -> curlyb B . curlybF comma A
    (3) A -> curlyb B . curlybF

    curlybF         shift and go to state 8


state 7

    (4) B -> key_id . colon number_value comma C

    colon           shift and go to state 9


state 8

    (2) A -> curlyb B curlybF . comma A
    (3) A -> curlyb B curlybF .

    comma           shift and go to state 10
    sbracketF       reduce using rule 3 (A -> curlyb B curlybF .)


state 9

    (4) B -> key_id colon . number_value comma C

    number_value    shift and go to state 11


state 10

    (2) A -> curlyb B curlybF comma . A
    (2) A -> . curlyb B curlybF comma A
    (3) A -> . curlyb B curlybF

    curlyb          shift and go to state 4

    A                              shift and go to state 12

state 11

    (4) B -> key_id colon number_value . comma C

    comma           shift and go to state 13


state 12

    (2) A -> curlyb B curlybF comma A .

    sbracketF       reduce using rule 2 (A -> curlyb B curlybF comma A .)


state 13

    (4) B -> key_id colon number_value comma . C
    (5) C -> . key_name colon string_value comma D

    key_name        shift and go to state 15

    C                              shift and go to state 14

state 14

    (4) B -> key_id colon number_value comma C .

    curlybF         reduce using rule 4 (B -> key_id colon number_value comma C .)


state 15

    (5) C -> key_name . colon string_value comma D

    colon           shift and go to state 16


state 16

    (5) C -> key_name colon . string_value comma D

    string_value    shift and go to state 17


state 17

    (5) C -> key_name colon string_value . comma D

    comma           shift and go to state 18


state 18

    (5) C -> key_name colon string_value comma . D
    (6) D -> . key_course colon string_value comma E

    key_course      shift and go to state 20

    D                              shift and go to state 19

state 19

    (5) C -> key_name colon string_value comma D .

    curlybF         reduce using rule 5 (C -> key_name colon string_value comma D .)


state 20

    (6) D -> key_course . colon string_value comma E

    colon           shift and go to state 21


state 21

    (6) D -> key_course colon . string_value comma E

    string_value    shift and go to state 22


state 22

    (6) D -> key_course colon string_value . comma E

    comma           shift and go to state 23


state 23

    (6) D -> key_course colon string_value comma . E
    (7) E -> . key_grades colon sbracket G sbracketF comma F

    key_grades      shift and go to state 25

    E                              shift and go to state 24

state 24

    (6) D -> key_course colon string_value comma E .

    curlybF         reduce using rule 6 (D -> key_course colon string_value comma E .)


state 25

    (7) E -> key_grades . colon sbracket G sbracketF comma F

    colon           shift and go to state 26


state 26

    (7) E -> key_grades colon . sbracket G sbracketF comma F

    sbracket        shift and go to state 27


state 27

    (7) E -> key_grades colon sbracket . G sbracketF comma F
    (8) G -> . number_value
    (9) G -> . number_value comma G

    number_value    shift and go to state 29

    G                              shift and go to state 28

state 28

    (7) E -> key_grades colon sbracket G . sbracketF comma F

    sbracketF       shift and go to state 30


state 29

    (8) G -> number_value .
    (9) G -> number_value . comma G

    sbracketF       reduce using rule 8 (G -> number_value .)
    comma           shift and go to state 31


state 30

    (7) E -> key_grades colon sbracket G sbracketF . comma F

    comma           shift and go to state 32


state 31

    (9) G -> number_value comma . G
    (8) G -> . number_value
    (9) G -> . number_value comma G

    number_value    shift and go to state 29

    G                              shift and go to state 33

state 32

    (7) E -> key_grades colon sbracket G sbracketF comma . F
    (10) F -> . key_average colon number_value

    key_average     shift and go to state 35

    F                              shift and go to state 34

state 33

    (9) G -> number_value comma G .

    sbracketF       reduce using rule 9 (G -> number_value comma G .)


state 34

    (7) E -> key_grades colon sbracket G sbracketF comma F .

    curlybF         reduce using rule 7 (E -> key_grades colon sbracket G sbracketF comma F .)


state 35

    (10) F -> key_average . colon number_value

    colon           shift and go to state 36


state 36

    (10) F -> key_average colon . number_value

    number_value    shift and go to state 37


state 37

    (10) F -> key_average colon number_value .

    curlybF         reduce using rule 10 (F -> key_average colon number_value .)

